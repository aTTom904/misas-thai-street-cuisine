@using misas_thai_street_cuisine_2._0.Models
@using Data
@using misas_thai_street_cuisine_2._0.Components
@using misas_thai_street_cuisine_2._0.Components.CartMenuItem

@page "/Cart"
@inject ShoppingCartService Cart
@inject misas_thai_street_cuisine_2._0.Services.OrderContextService OrderContext
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

<PageTitle>Shopping Cart</PageTitle>

<div class="cart-container">
    <h3>Your Cart</h3>

    @if (Cart?.Items == null || Cart.Items.Count == 0)
    {
        <p class="cart-empty">Your cart is empty.</p>
    }
    else
    {
        var groupedPlatters = Cart.Items
            .Where(i => i?.Item != null && i.Item is Platter)
            .GroupBy(i => i.Item.Name)
            .Select(g => g.First().Item as MenuItem);
        var sideDishes = Cart.Items
            .Where(i => i?.Item != null && i.Item is SideDish)
            .Select(i => i.Item as MenuItem);

        foreach (var platter in groupedPlatters)
        {
            if (platter != null)
            {
                <CartMenuItem MenuItem="@platter" OnCartChanged="OnCartChanged">
                    <div style="margin-bottom: 1rem;"></div>
                </CartMenuItem>
            }
        }
        foreach (var side in sideDishes)
        {
            if (side != null)
            {
                <CartMenuItem MenuItem="@side" OnCartChanged="OnCartChanged">
                    <div style="margin-bottom: 1rem;"></div>
                </CartMenuItem>
            }
        }

        <h4 class="total-price">Total Price: <span class="price-highlight">$@cartTotal.ToString("F2")</span></h4>
        
        @if (cartTotal < minimumOrder)
        {
            <div class="minimum-order-notice">
                $@((minimumOrder - cartTotal).ToString("F2")) more needed to reach the $@minimumOrder.ToString("F2") minimum for delivery.
            </div>
        }
        
        <div class="cart-buttons-container">
            <button type="button" 
                    @onclick="OnKeepShoppingClicked" 
                    class="keep-shopping-btn">
                Keep Shopping
            </button>
            
            <div class="finish-up-container" title="@(cartTotal < minimumOrder ? $"${minimumOrder:F2} minimum order required for delivery" : "")">
                <button type="submit" 
                        @onclick="OnFinishUpClicked" 
                        class="finish-up-btn @(cartTotal < minimumOrder ? "disabled" : "")"
                        disabled="@(cartTotal < minimumOrder)">
                    Finish Up
                </button>
            </div>
        </div>
    }
</div>

@code {
    private const decimal minimumOrder = 35.00m;
    private decimal cartTotal => Cart?.Items?.Where(i => i != null).Sum(i => i.GetTotalPrice()) ?? 0m;

    private void OnCartChanged()
    {
        StateHasChanged();
    }

    private void OnKeepShoppingClicked()
    {
        NavigationManager.NavigateTo("/");
    }

    private void OnFinishUpClicked()
    {
        if (cartTotal >= minimumOrder)
        {
            NavigationManager.NavigateTo("/FinalizeOrder");
        }
    }
}
