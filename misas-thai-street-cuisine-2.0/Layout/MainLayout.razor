@namespace misas_thai_street_cuisine_2._0.Layout
@inherits LayoutComponentBase

@inject ShoppingCartService Cart

<div class="layout-container">
    <header class="navbar">
        <div class="countdown" @onclick="() => isMobileMenuVisible = false">
            <span class="countdown-text">
                <span class="countdown-line-1">Order Deadline:</span>
                <span class="countdown-line-2">@CountdownText</span>
            </span>
            <i class="fas fa-info-circle countdown-info-icon" @onclick="ToggleTooltip" @onclick:stopPropagation="true"></i>
            @if (showTooltip)
            {
                <div class="tooltip-popup" @onclick:stopPropagation="true">
                    <div class="tooltip-content">
                        <button class="tooltip-close" @onclick="CloseTooltip">&times;</button>
                        <h2>Our Order Process</h2>
                        <p>Order deadlines are every <strong>Monday at 12:00 PM</strong>.</p>
                        <p>Orders placed before the deadline will be processed for the current week.</p>
                        <p>If ordering after the deadline, your order will be processed for the following week.</p>
                    </div>
                </div>
            }
        </div>
        <div class="nav-left" @onclick="() => isMobileMenuVisible = false">
            <a href="menu">Menu</a>
            <a href="gallery">Gallery</a>
        </div>
        <div class="logo-container" @onclick="() => isMobileMenuVisible = false">
            <a href="/">
                <img src="Resources/Images/Logos/ORNG M RED CHILI.png" alt="Logo" class="logo" />
            </a>
        </div>
        <div class="nav-right" @onclick="() => isMobileMenuVisible = false">
            <a href="about">About</a>
            <a href="contact">Contact</a>
        </div>
        @if (CartItemCount > 0)
        {
            <a href="/Cart" class="shopping-cart animate-bounce">
                <i class="fas fa-shopping-cart"></i>
            </a>
            <span class="cart-count animate-pulse">@CartItemCount</span>
        }
        <div class="hamburger-menu" @onclick="ToggleMobileMenu">
            ☰
        </div>
    </header>
    @if (isMobileMenuVisible)
    {
        <div id="mobile-nav-wrapper" @onclick="() => isMobileMenuVisible = false">
            <div class="mobile-nav slide-down">
                <a href="menu">Menu</a>
                <a href="gallery">Gallery</a>
                <a href="about">About</a>
                <a href="contact">Contact</a>
            </div>
        </div>
    }

    <div class="main-content" @onclick="() => isMobileMenuVisible = false">
        @Body
    </div>

    <footer class="footer">
        <div class="footer-content">
            <div class="footer-left">
                <p>&copy; @DateTime.Now.Year Misa's Thai Street Cuisine. All Rights Reserved.</p>
            </div>
            <div class="footer-right">
                <a href="https://www.facebook.com/MisasThaiStreetCuisine" target="_blank" aria-label="Facebook">
                    <i class="fab fa-facebook-f"></i>
                </a>
                <a href="https://www.instagram.com/misasthaistreetcuisine/" target="_blank" aria-label="Instagram">
                    <i class="fab fa-instagram"></i>
                </a>
            </div>
        </div>
    </footer>
</div>

@code {
    private bool isMobileMenuVisible = false;
    private bool showTooltip = false;
    private int CartItemCount = 0;
    private string CountdownText = "Calculating...";
    private Timer? countdownTimer;

    private void ToggleMobileMenu()
    {
        Console.WriteLine("Button Clicked!");
        isMobileMenuVisible = !isMobileMenuVisible;
    }

    private void ToggleTooltip()
    {
        showTooltip = !showTooltip;
    }

    private void CloseTooltip()
    {
        showTooltip = false;
    }

    protected override void OnInitialized()
    {
        CartItemCount = GetCartItemCount();
        Cart.CartChanged += OnCartChanged;
        StartCountdownTimer();
    }

    private void OnCartChanged()
    {
        CartItemCount = GetCartItemCount();
        InvokeAsync(StateHasChanged);
    }

    private int GetCartItemCount()
    {
        return Cart.Items.Sum(i => i.Quantity);
    }

    private void StartCountdownTimer()
    {
        countdownTimer = new Timer(UpdateCountdown, null, TimeSpan.Zero, TimeSpan.FromSeconds(1));
    }

    private void UpdateCountdown(object? state)
    {
        var now = DateTime.Now;
        var nextMonday12PM = GetNextMonday12PM(now);
        var remainingTime = nextMonday12PM - now;

        if (remainingTime.TotalSeconds <= 0)
        {
            CountdownText = "Orders Open!";
            // Reset to next Monday 12 PM
            nextMonday12PM = GetNextMonday12PM(now.AddDays(7));
            remainingTime = nextMonday12PM - now;
        }

        if (remainingTime.TotalDays >= 1)
        {
            CountdownText = $"{remainingTime.Days}d {remainingTime.Hours:D2}h {remainingTime.Minutes:D2}m";
        }
        else
        {
            CountdownText = $"{remainingTime.Hours:D2}h {remainingTime.Minutes:D2}m";
        }

        InvokeAsync(StateHasChanged);
    }

    private DateTime GetNextMonday12PM(DateTime from)
    {
        // Calculate days until next Monday
        int daysUntilMonday = ((int)DayOfWeek.Monday - (int)from.DayOfWeek + 7) % 7;
        
        // If today is Monday and it's before 12 PM, target today at 12 PM
        if (from.DayOfWeek == DayOfWeek.Monday && from.TimeOfDay < TimeSpan.FromHours(12))
        {
            return from.Date.AddHours(12);
        }
        
        // If daysUntilMonday is 0 (today is Monday but after 12 PM), target next Monday
        if (daysUntilMonday == 0)
        {
            daysUntilMonday = 7;
        }
        
        return from.Date.AddDays(daysUntilMonday).AddHours(12);
    }

    public void Dispose()
    {
        countdownTimer?.Dispose();
        Cart.CartChanged -= OnCartChanged;
    }
}